/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package front;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import controlador.Amortizacion;
import models.DeudasBean;
import models.SolicitudBean;
import util.FuncionesUtiles;

/**
 *
 * @author b586854
 */
public class Deudas extends javax.swing.JFrame {

    /**
     * Creates new form Deudas
     */
    ArrayList<SolicitudBean> solicituBean;

    public Deudas() {
        initComponents();
    }

    public Deudas(ArrayList<SolicitudBean> solictudArrayList) {
        initComponents();
        this.solicituBean = solictudArrayList;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelDeudaCapitalTrabajo = new javax.swing.JLabel();
        jLabelBancoDct = new javax.swing.JLabel();
        jLabelSaldo = new javax.swing.JLabel();
        jLabelBancoMercantilDct = new javax.swing.JLabel();
        jLabelBancoBanescolDct = new javax.swing.JLabel();
        jLabelBancoProvinciallDct = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelTotalDeudalDct = new javax.swing.JLabel();
        saldoMercantil = new javax.swing.JTextField();
        saldoBanesco = new javax.swing.JTextField();
        saldoProvincial = new javax.swing.JTextField();
        totalDeuda = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabelDeudaActivoFijo = new javax.swing.JLabel();
        jLabelBancoDaf = new javax.swing.JLabel();
        jLabelSaldoDaf = new javax.swing.JLabel();
        jLabelBancoMercantilDaf = new javax.swing.JLabel();
        jLabelBanescoDaf = new javax.swing.JLabel();
        jLabelBancoProvincialDaf = new javax.swing.JLabel();
        jLabelFechaDaf = new javax.swing.JLabel();
        jLabelPlazoDaf = new javax.swing.JLabel();
        jLabelDaf = new javax.swing.JLabel();
        saldoMercantilDaf = new javax.swing.JTextField();
        saldoBanescoDaf = new javax.swing.JTextField();
        saldoProvincialDaf = new javax.swing.JTextField();
        fechaMercantil = new javax.swing.JTextField();
        fechaBanesco = new javax.swing.JTextField();
        fechaProvincial = new javax.swing.JTextField();
        jLabelAmortizacionDaf = new javax.swing.JLabel();
        plazoMercantil = new javax.swing.JTextField();
        plazoBanesco = new javax.swing.JTextField();
        plazoProvincial = new javax.swing.JTextField();
        tasaMercantil = new javax.swing.JTextField();
        tasaBanesco = new javax.swing.JTextField();
        tasaProvincial = new javax.swing.JTextField();
        amortMercantil = new javax.swing.JComboBox<String>();
        amortBanesco = new javax.swing.JComboBox<String>();
        amortProvincial = new javax.swing.JComboBox<String>();
        jButtonGenerarTablaAmort = new javax.swing.JButton();
        jButtonVerTablasResumen = new javax.swing.JButton();
        jButtonSolicitud = new javax.swing.JButton();
        jButtonVentas = new javax.swing.JButton();
        jButtonBeneficio = new javax.swing.JButton();
        jButtonParametros = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jLabelMensaje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Deudas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabelDeudaCapitalTrabajo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelDeudaCapitalTrabajo.setText("Deuda Capital Trabajo");

        jLabelBancoDct.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelBancoDct.setText("Banco");

        jLabelSaldo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelSaldo.setText("Saldo");

        jLabelBancoMercantilDct.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelBancoMercantilDct.setText("Banco Mercantil");

        jLabelBancoBanescolDct.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelBancoBanescolDct.setText("Banco Banesco");

        jLabelBancoProvinciallDct.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelBancoProvinciallDct.setText("Banco Provincial");

        jLabelTotalDeudalDct.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelTotalDeudalDct.setText("Total Deuda");

        saldoMercantil.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        saldoMercantil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saldoMercantilActionPerformed(evt);
            }
        });

        saldoBanesco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        saldoProvincial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        totalDeuda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabelDeudaActivoFijo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelDeudaActivoFijo.setText("Deuda Activo Fijo");

        jLabelBancoDaf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelBancoDaf.setText("Banco");

        jLabelSaldoDaf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelSaldoDaf.setText("Saldo");

        jLabelBancoMercantilDaf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelBancoMercantilDaf.setText("Banco Mercantil");

        jLabelBanescoDaf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelBanescoDaf.setText("Banco Banesco");

        jLabelBancoProvincialDaf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelBancoProvincialDaf.setText("Banco Provincial");

        jLabelFechaDaf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelFechaDaf.setText("Fecha");

        jLabelPlazoDaf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPlazoDaf.setText("Plazo");

        jLabelDaf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelDaf.setText("Tasa");

        saldoMercantilDaf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        saldoMercantilDaf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saldoMercantilDafActionPerformed(evt);
            }
        });

        saldoBanescoDaf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        saldoProvincialDaf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        fechaBanesco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        fechaProvincial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabelAmortizacionDaf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelAmortizacionDaf.setText("Amortización");

        plazoMercantil.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        plazoBanesco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        plazoProvincial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        tasaMercantil.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        tasaBanesco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        tasaProvincial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        amortMercantil.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        amortMercantil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Mensual", "Bimestral", "Trimestral", "Cuatrimestral", "Semestral" }));
        amortMercantil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amortMercantilActionPerformed(evt);
            }
        });

        amortBanesco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        amortBanesco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Mensual", "Bimestral", "Trimestral", "Cuatrimestral", "Semestral" }));
        amortBanesco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amortBanescoActionPerformed(evt);
            }
        });

        amortProvincial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        amortProvincial.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Mensual", "Bimestral", "Trimestral", "Cuatrimestral", "Semestral" }));

        jButtonGenerarTablaAmort.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonGenerarTablaAmort.setText("Generar Tabla de Amortización");
        jButtonGenerarTablaAmort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarTablaAmortActionPerformed(evt);
            }
        });

        jButtonVerTablasResumen.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonVerTablasResumen.setText("Ver Tablas Resumen");
        jButtonVerTablasResumen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerTablasResumenActionPerformed(evt);
            }
        });

        jButtonSolicitud.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonSolicitud.setText("Solicitud");
        jButtonSolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSolicitudActionPerformed(evt);
            }
        });

        jButtonVentas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonVentas.setText("Ventas");
        jButtonVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVentasActionPerformed(evt);
            }
        });

        jButtonBeneficio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonBeneficio.setText("Beneficio");
        jButtonBeneficio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBeneficioActionPerformed(evt);
            }
        });

        jButtonParametros.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonParametros.setText("Parametros");

        jButtonSalir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jLabelMensaje.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabelMensaje.setForeground(new java.awt.Color(204, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelTotalDeudalDct, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(460, 460, 460)
                                .addComponent(jButtonParametros, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabelBancoBanescolDct, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(saldoBanesco, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(50, 50, 50)
                                            .addComponent(jLabelBancoProvincialDaf, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(saldoProvincialDaf, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabelBancoMercantilDct, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(saldoMercantil, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelBancoProvinciallDct, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(saldoProvincial, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonVerTablasResumen)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonGenerarTablaAmort)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonSolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabelPlazoDaf, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabelDaf, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(plazoBanesco, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(tasaBanesco, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(plazoProvincial, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(tasaProvincial, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(plazoMercantil, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(tasaMercantil, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabelAmortizacionDaf, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(amortMercantil, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(amortBanesco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(amortProvincial, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jButtonBeneficio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelBanescoDaf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelBancoDaf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelBancoMercantilDaf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelSaldoDaf, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabelFechaDaf, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(saldoMercantilDaf, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(saldoBanescoDaf, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(35, 35, 35)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fechaBanesco, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fechaMercantil, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fechaProvincial, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabelBancoDct, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabelSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabelDeudaActivoFijo, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(totalDeuda, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(310, 310, 310))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabelDeudaCapitalTrabajo, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(29, 29, 29)
                                    .addComponent(jLabelMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(110, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDeudaCapitalTrabajo)
                    .addComponent(jLabelMensaje))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelBancoDct)
                            .addComponent(jLabelSaldo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelBancoMercantilDct)
                            .addComponent(saldoMercantil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonGenerarTablaAmort)
                            .addComponent(jButtonSolicitud))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonVentas)
                            .addComponent(jButtonVerTablasResumen)
                            .addComponent(jLabelBancoBanescolDct)
                            .addComponent(saldoBanesco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonBeneficio)
                            .addComponent(saldoProvincial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelBancoProvinciallDct))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonParametros)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totalDeuda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelTotalDeudalDct))
                        .addGap(32, 32, 32)
                        .addComponent(jLabelDeudaActivoFijo)))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBancoDaf)
                    .addComponent(jLabelSaldoDaf)
                    .addComponent(jLabelFechaDaf)
                    .addComponent(jLabelPlazoDaf)
                    .addComponent(jLabelDaf)
                    .addComponent(jLabelAmortizacionDaf))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabelBancoMercantilDaf)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(plazoMercantil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tasaMercantil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amortMercantil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fechaMercantil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saldoMercantilDaf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelBanescoDaf)
                        .addComponent(saldoBanescoDaf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(plazoBanesco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tasaBanesco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(amortBanesco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(fechaBanesco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelBancoProvincialDaf)
                        .addComponent(saldoProvincialDaf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(plazoProvincial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tasaProvincial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(amortProvincial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(fechaProvincial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saldoMercantilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saldoMercantilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saldoMercantilActionPerformed

    private void amortBanescoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amortBanescoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amortBanescoActionPerformed

    private void amortMercantilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amortMercantilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amortMercantilActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        BufferedReader bf = null;
        try {
            String linea;
            String[] datosDeuda;
            ArrayList<DeudasBean> _matrixDeuda = null;
            String[] fecha;

            bf = new BufferedReader(new FileReader("C:\\PConceptoCapacidad\\archivos\\ArchivoCargaDeudas.txt"));
            try {
                _matrixDeuda = new ArrayList<DeudasBean>();
                while ((linea = bf.readLine()) != null) {

                    datosDeuda = linea.split(",");
                    fecha = datosDeuda[2].split("/");

                    if ((datosDeuda[0].equals("001") || datosDeuda[0].equals("002") || datosDeuda[0].equals("003"))
                            && ((fecha[0].trim().equals("00") || fecha[0].trim().equals("99"))
                            && (fecha[1].trim().equals("00") || fecha[1].trim().equals("99"))
                            && (fecha[2].trim().equals("0000") || fecha[2].trim().equals("9999")))) {

                        _matrixDeuda.add(new DeudasBean(datosDeuda[0], datosDeuda[1], "no", null, null, null));

                    } else {
                        _matrixDeuda.add(new DeudasBean(datosDeuda[0], datosDeuda[1], datosDeuda[2], datosDeuda[3], datosDeuda[4], datosDeuda[5]));
                    }
                }

                for (int i = 0; i < _matrixDeuda.size(); i++) {
                    if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getSaldoBcoMercantilDct())) {
                        saldoMercantil.setText(String.valueOf(_matrixDeuda.get(i).getSaldoBcoMercantilDct()));
                    } else if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getSaldoBcoBanescoDct())) {
                        saldoBanesco.setText(String.valueOf(_matrixDeuda.get(i).getSaldoBcoBanescoDct()));
                    } else if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getSaldoBcoProvincialDct())) {
                        saldoProvincial.setText(String.valueOf(_matrixDeuda.get(i).getSaldoBcoProvincialDct()));
                    }

                    if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getSaldoBcoMercantilDaf())) {
                        saldoMercantilDaf.setText(FuncionesUtiles.formatoDouble(_matrixDeuda.get(i).getSaldoBcoMercantilDaf()));
                    } else if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getSaldoBcoBanescoDaf())) {
                        saldoBanescoDaf.setText(FuncionesUtiles.formatoDouble(_matrixDeuda.get(i).getSaldoBcoBanescoDaf()));
                    } else if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getSaldoBcoProvincialDaf())) {
                        saldoProvincialDaf.setText(FuncionesUtiles.formatoDouble(_matrixDeuda.get(i).getSaldoBcoProvincialDaf()));
                    }

                    if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getFechaMercantil())) {
                        fechaMercantil.setText(_matrixDeuda.get(i).getFechaMercantil());
                    } else if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getFechaBanesco())) {
                        fechaBanesco.setText(_matrixDeuda.get(i).getFechaBanesco());
                    } else if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getFechaProvincial())) {
                        fechaProvincial.setText(_matrixDeuda.get(i).getFechaProvincial());
                    }

                    if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getPlazoMercantil())) {
                        plazoMercantil.setText(String.valueOf(_matrixDeuda.get(i).getPlazoMercantil()));
                    } else if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getPlazoBanesco())) {
                        plazoBanesco.setText(String.valueOf(_matrixDeuda.get(i).getPlazoBanesco()));
                    } else if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getPlazoProvincial())) {
                        plazoProvincial.setText(String.valueOf(_matrixDeuda.get(i).getPlazoProvincial()));
                    }

                    if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getTasaMercantil())) {
                        tasaMercantil.setText(String.valueOf(_matrixDeuda.get(i).getTasaMercantil()));
                    } else if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getTasaBanesco())) {
                        tasaBanesco.setText(String.valueOf(_matrixDeuda.get(i).getTasaBanesco()));
                    } else if (!FuncionesUtiles.validarCampo(_matrixDeuda.get(i).getTasaProvincial())) {
                        tasaProvincial.setText(String.valueOf(_matrixDeuda.get(i).getTasaProvincial()));
                    }

                    if (!FuncionesUtiles.validarCampoEntero(_matrixDeuda.get(i).getAmortizacionMercantil())) {
                        amortMercantil.setSelectedIndex(_matrixDeuda.get(i).getAmortizacionMercantil());
                    } else if (!FuncionesUtiles.validarCampoEntero(_matrixDeuda.get(i).getAmortizacionBanesco())) {
                        amortBanesco.setSelectedIndex(_matrixDeuda.get(i).getAmortizacionBanesco());
                    } else if (!FuncionesUtiles.validarCampoEntero(_matrixDeuda.get(i).getAmortizacionProvincial())) {
                        amortProvincial.setSelectedIndex(_matrixDeuda.get(i).getAmortizacionProvincial());
                    }

                }
                BigDecimal saldoMercantilBigDecimal = new BigDecimal(saldoMercantil.getText());
                BigDecimal saldoBanescoBigDecimal = new BigDecimal(saldoBanesco.getText());
                BigDecimal saldoProvincialBigDecimal = new BigDecimal(saldoProvincial.getText());
                BigDecimal total = saldoMercantilBigDecimal.add(saldoBanescoBigDecimal.add(saldoProvincialBigDecimal));

                totalDeuda.setText(String.valueOf(total));

            } catch (IOException ex) {
                Logger.getLogger(Deudas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NumberFormatException nb) {
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Deudas.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                bf.close();
            } catch (IOException ex) {
                Logger.getLogger(Deudas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_formWindowOpened

    private void jButtonSolicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSolicitudActionPerformed
        if (FuncionesUtiles.isVacio(saldoMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco Mercantil  no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco Mercantil debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco banesco  no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital del banco banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco banesco  no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(totalDeuda.getText())) {
            JOptionPane.showMessageDialog(null, "El Total de la Deuda Capital no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(totalDeuda.getText())) {
            JOptionPane.showMessageDialog(null, "El Total de la Deuda Capital debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoMercantilDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Mercantil no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoMercantilDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Mercantil debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoBanescoDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Banesco no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoBanescoDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoProvincialDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Provincial no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoProvincialDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Provincial debe ser numerico");

        } else if (FuncionesUtiles.isVacio(fechaMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Mercantil no puede ser vacia");

        } else if (!FuncionesUtiles.isFormatoFecha(fechaMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Mercantil debe contener el siguiente formato ##/##/####");

        } else if (FuncionesUtiles.isVacio(fechaBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Banesco no puede ser vacia");

        } else if (!FuncionesUtiles.isFormatoFecha(fechaBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Banesco debe contener el siguiente formato ##/##/####");

        } else if (FuncionesUtiles.isVacio(fechaProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Provincial no puede ser vacia");

        } else if (!FuncionesUtiles.isFormatoFecha(fechaProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Provincial debe contener el siguiente formato ##/##/####");

        } else if (FuncionesUtiles.isVacio(plazoMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Mercantil no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(plazoMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Provincial debe ser numerico");

        } else if (FuncionesUtiles.isVacio(plazoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Banesco no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(plazoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(plazoProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Provincial no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(plazoProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Provincial debe ser numerico");

        } else if (FuncionesUtiles.isVacio(tasaMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "La Tasa de la Deuda Capital del banco Mercantil no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(tasaMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Mercantil debe ser numerico");

        } else if (FuncionesUtiles.isVacio(tasaBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "La Tasa de la Deuda Capital del banco Banesco no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(tasaBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(tasaProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "La Tasa de la Deuda Capital del banco Provincial no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(tasaProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Provincial debe ser numerico");

        } else {
            SolicitudArchivo solicitudArchivo = new SolicitudArchivo();
            solicitudArchivo.setLocationRelativeTo(null);
            solicitudArchivo.setVisible(true);
            this.setVisible(false);
        }

    }//GEN-LAST:event_jButtonSolicitudActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVentasActionPerformed
        if (FuncionesUtiles.isVacio(saldoMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco Mercantil  no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco Mercantil debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco banesco  no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital del banco banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco banesco  no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(totalDeuda.getText())) {
            JOptionPane.showMessageDialog(null, "El Total de la Deuda Capital no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(totalDeuda.getText())) {
            JOptionPane.showMessageDialog(null, "El Total de la Deuda Capital debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoMercantilDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Mercantil no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoMercantilDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Mercantil debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoBanescoDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Banesco no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoBanescoDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoProvincialDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Provincial no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoProvincialDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Provincial debe ser numerico");

        } else if (FuncionesUtiles.isVacio(fechaMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Mercantil no puede ser vacia");

        } else if (!FuncionesUtiles.isFormatoFecha(fechaMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Mercantil debe contener el siguiente formato ##/##/####");

        } else if (FuncionesUtiles.isVacio(fechaBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Banesco no puede ser vacia");

        } else if (!FuncionesUtiles.isFormatoFecha(fechaBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Banesco debe contener el siguiente formato ##/##/####");

        } else if (FuncionesUtiles.isVacio(fechaProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Provincial no puede ser vacia");

        } else if (!FuncionesUtiles.isFormatoFecha(fechaProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Provincial debe contener el siguiente formato ##/##/####");

        } else if (FuncionesUtiles.isVacio(plazoMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Mercantil no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(plazoMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Provincial debe ser numerico");

        } else if (FuncionesUtiles.isVacio(plazoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Banesco no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(plazoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(plazoProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Provincial no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(plazoProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Provincial debe ser numerico");

        } else if (FuncionesUtiles.isVacio(tasaMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "La Tasa de la Deuda Capital del banco Mercantil no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(tasaMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Mercantil debe ser numerico");

        } else if (FuncionesUtiles.isVacio(tasaBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "La Tasa de la Deuda Capital del banco Banesco no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(tasaBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(tasaProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "La Tasa de la Deuda Capital del banco Provincial no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(tasaProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Provincial debe ser numerico");

        } else {
            Ventas ventas = new Ventas();
            ventas.setLocationRelativeTo(null);
            ventas.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_jButtonVentasActionPerformed

    private void jButtonBeneficioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBeneficioActionPerformed
        if (FuncionesUtiles.isVacio(saldoMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco Mercantil  no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco Mercantil debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco banesco  no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital del banco banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco banesco  no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo Deuda Capital  del banco banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(totalDeuda.getText())) {
            JOptionPane.showMessageDialog(null, "El Total de la Deuda Capital no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(totalDeuda.getText())) {
            JOptionPane.showMessageDialog(null, "El Total de la Deuda Capital debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoMercantilDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Mercantil no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoMercantilDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Mercantil debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoBanescoDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Banesco no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoBanescoDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(saldoProvincialDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Provincial no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(saldoProvincialDaf.getText())) {
            JOptionPane.showMessageDialog(null, "El saldo de la Deuda Capital del banco Provincial debe ser numerico");

        } else if (FuncionesUtiles.isVacio(fechaMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Mercantil no puede ser vacia");

        } else if (!FuncionesUtiles.isFormatoFecha(fechaMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Mercantil debe contener el siguiente formato ##/##/####");

        } else if (FuncionesUtiles.isVacio(fechaBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Banesco no puede ser vacia");

        } else if (!FuncionesUtiles.isFormatoFecha(fechaBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Banesco debe contener el siguiente formato ##/##/####");

        } else if (FuncionesUtiles.isVacio(fechaProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Provincial no puede ser vacia");

        } else if (!FuncionesUtiles.isFormatoFecha(fechaProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Provincial debe contener el siguiente formato ##/##/####");

        } else if (FuncionesUtiles.isVacio(plazoMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Mercantil no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(plazoMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Provincial debe ser numerico");

        } else if (FuncionesUtiles.isVacio(plazoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Banesco no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(plazoBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(plazoProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Provincial no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(plazoProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "El plazo de la Deuda Capital del banco Provincial debe ser numerico");

        } else if (FuncionesUtiles.isVacio(tasaMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "La Tasa de la Deuda Capital del banco Mercantil no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(tasaMercantil.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Mercantil debe ser numerico");

        } else if (FuncionesUtiles.isVacio(tasaBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "La Tasa de la Deuda Capital del banco Banesco no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(tasaBanesco.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Banesco debe ser numerico");

        } else if (FuncionesUtiles.isVacio(tasaProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "La Tasa de la Deuda Capital del banco Provincial no puede ser vacia");

        } else if (!FuncionesUtiles.isNumerico(tasaProvincial.getText())) {
            JOptionPane.showMessageDialog(null, "La fecha de la Deuda Capital del banco Provincial debe ser numerico");

        } else {
            Beneficio beneficios = new Beneficio();
            beneficios.setLocationRelativeTo(null);
            beneficios.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_jButtonBeneficioActionPerformed

    private void jButtonGenerarTablaAmortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarTablaAmortActionPerformed
        ArrayList<Amortizacion> _amortizacionMercantil = new ArrayList<Amortizacion>();
        ArrayList<Amortizacion> _amortizacionBanesco = new ArrayList<Amortizacion>();
        ArrayList<Amortizacion> _amortizacionProvincial = new ArrayList<Amortizacion>();
        ArrayList<Amortizacion> _amortizacionSolicitud = new ArrayList<Amortizacion>();

        _amortizacionMercantil.add(new Amortizacion(plazoMercantil.getText(), amortMercantil.getSelectedIndex(), saldoBanescoDaf.getText(), 0, fechaMercantil.getText(), tasaMercantil.getText(), "0"));
        FuncionesUtiles.escribirArchivo("DeudaMercantil.txt", _amortizacionMercantil, "Deuda", saldoBanescoDaf.getText(), fechaMercantil.getText(), plazoMercantil.getText());

        _amortizacionBanesco.add(new Amortizacion(plazoBanesco.getText(), amortBanesco.getSelectedIndex(), saldoBanescoDaf.getText(), 0, fechaBanesco.getText(), tasaBanesco.getText(), "0"));
        FuncionesUtiles.escribirArchivo("DeudaBanesco.txt", _amortizacionBanesco, "Deuda", saldoBanescoDaf.getText(), fechaBanesco.getText(), plazoBanesco.getText());

        _amortizacionProvincial.add(new Amortizacion(plazoProvincial.getText(), amortProvincial.getSelectedIndex(), saldoProvincialDaf.getText(), 0, fechaProvincial.getText(), tasaProvincial.getText(), "0"));
        FuncionesUtiles.escribirArchivo("DeudaProvincial.txt", _amortizacionProvincial, "Deuda", saldoProvincialDaf.getText(), fechaProvincial.getText(), plazoProvincial.getText());

        if (solicituBean != null) {
            for (int i = 0; i < solicituBean.size(); i++) {
                _amortizacionSolicitud.add(new Amortizacion(solicituBean.get(i).getPlazoMeses().toString(), solicituBean.get(i).getAmortizaciones(), solicituBean.get(i).getMontoSolicitado().toString(), solicituBean.get(i).getDestino(), solicituBean.get(i).getFechaEstLiq(), solicituBean.get(i).getTasa().toString(), solicituBean.get(i).getComisionFlat().toString()));
                FuncionesUtiles.escribirArchivo("SolicitudArchivo.txt", _amortizacionSolicitud, "Solicitud", solicituBean.get(i).getMontoSolicitado().toString(), solicituBean.get(i).getFechaEstLiq(), solicituBean.get(i).getPlazoMeses().toString());
                jLabelMensaje.setText("Se generaron los Archivos de manera exitosa");
            }
           

        } else {
            jLabelMensaje.setText("Cargar los valores en Datos Solicitud para "
                    + "generar el archivo de Amortización de Monto Solicitud");

        }
    }//GEN-LAST:event_jButtonGenerarTablaAmortActionPerformed

    private void saldoMercantilDafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saldoMercantilDafActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saldoMercantilDafActionPerformed

    private void jButtonVerTablasResumenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerTablasResumenActionPerformed
   
    }//GEN-LAST:event_jButtonVerTablasResumenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Deudas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Deudas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Deudas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Deudas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Deudas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> amortBanesco;
    private javax.swing.JComboBox<String> amortMercantil;
    private javax.swing.JComboBox<String> amortProvincial;
    private javax.swing.JTextField fechaBanesco;
    private javax.swing.JTextField fechaMercantil;
    private javax.swing.JTextField fechaProvincial;
    private javax.swing.JButton jButtonBeneficio;
    private javax.swing.JButton jButtonGenerarTablaAmort;
    private javax.swing.JButton jButtonParametros;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonSolicitud;
    private javax.swing.JButton jButtonVentas;
    private javax.swing.JButton jButtonVerTablasResumen;
    private javax.swing.JLabel jLabelAmortizacionDaf;
    private javax.swing.JLabel jLabelBancoBanescolDct;
    private javax.swing.JLabel jLabelBancoDaf;
    private javax.swing.JLabel jLabelBancoDct;
    private javax.swing.JLabel jLabelBancoMercantilDaf;
    private javax.swing.JLabel jLabelBancoMercantilDct;
    private javax.swing.JLabel jLabelBancoProvincialDaf;
    private javax.swing.JLabel jLabelBancoProvinciallDct;
    private javax.swing.JLabel jLabelBanescoDaf;
    private javax.swing.JLabel jLabelDaf;
    private javax.swing.JLabel jLabelDeudaActivoFijo;
    private javax.swing.JLabel jLabelDeudaCapitalTrabajo;
    private javax.swing.JLabel jLabelFechaDaf;
    private javax.swing.JLabel jLabelMensaje;
    private javax.swing.JLabel jLabelPlazoDaf;
    private javax.swing.JLabel jLabelSaldo;
    private javax.swing.JLabel jLabelSaldoDaf;
    private javax.swing.JLabel jLabelTotalDeudalDct;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField plazoBanesco;
    private javax.swing.JTextField plazoMercantil;
    private javax.swing.JTextField plazoProvincial;
    private javax.swing.JTextField saldoBanesco;
    private javax.swing.JTextField saldoBanescoDaf;
    private javax.swing.JTextField saldoMercantil;
    private javax.swing.JTextField saldoMercantilDaf;
    private javax.swing.JTextField saldoProvincial;
    private javax.swing.JTextField saldoProvincialDaf;
    private javax.swing.JTextField tasaBanesco;
    private javax.swing.JTextField tasaMercantil;
    private javax.swing.JTextField tasaProvincial;
    private javax.swing.JTextField totalDeuda;
    // End of variables declaration//GEN-END:variables

    private Object saldo(int j) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private String ValueOf(DeudasBean deudasDcp) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
